{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\Documents\\\\UM_Coding\\\\Project31\\\\11-Stu_ReactRouter_Solved\\\\client\\\\src\\\\pages\\\\Detail.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Detail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      plant: {}\n    };\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    // When this component mounts, grab the book with the _id of this.props.match.params.id\n    // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBook(this.props.match.params.id).then(function (res) {\n        return _this2.setState({\n          plant: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.state.plant.Type, \" by \", this.state.plant.Name)))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-10 md-offset-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Synopsis\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Type:\", this.state.plant.Type), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Name:\", this.state.plant.Name), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Image: \", React.createElement(\"href\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.state.plant.Image)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"BotanicalName:\", this.state.plant.BotanicalName), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Height: \", this.state.plant.Height), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Spacing:\", this.state.plant.Spacing), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Plant Spacing:\", this.state.plant.PS), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Row Spacing: \", React.createElement(\"href\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.plant.RS)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Depth:\", this.state.plant.Depth), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Spread: \", this.state.plant.Spread), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Sun Light:\", this.state.plant.Light), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Yield:\", this.state.plant.Yeild), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Foliage: \", React.createElement(\"href\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.plant.Foliage)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Fruit:\", this.state.plant.Fruit), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Maturity: \", this.state.plant.Maturity), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Zone:\", this.state.plant.Zone), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Germination:\", this.state.plant.Germination), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Form: \", React.createElement(\"href\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.plant.Form)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Flowers:\", this.state.plant.Flowers), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Soil: \", this.state.plant.Soil), \"Zone: String, Germination: String, Form: String, Flowers: String, Soil: String, Growth: String, Seeds: String, Pruning: String, Comments: String,\", this.state.plant.Comments)))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u2190 Back to Authors\"))));\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport default Detail;\n/*\nType: String,\nName: String,\nImage: String,\nBotanicalName: String,\nHeight: String,\nSpacing: String,\nPS: Number,\nRS: Number,\nDepth: String,\nSpread: String,\nLight: String,\nYield: String,\nFoliage: String,\nFruit: String,\nMaturity: String,\nZone: String,\nGermination: String,\nForm: String,\nFlowers: String,\nSoil: String,\nGrowth: String,\nSeeds: String,\nPruning: String,\nComments: String,\n*/","map":{"version":3,"sources":["C:\\Users\\Nathan\\Documents\\UM_Coding\\Project31\\11-Stu_ReactRouter_Solved\\client\\src\\pages\\Detail.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","API","Detail","state","plant","getBook","props","match","params","id","then","res","setState","data","catch","err","console","log","Type","Name","Image","BotanicalName","Height","Spacing","PS","RS","Depth","Spread","Light","Yeild","Foliage","Fruit","Maturity","Zone","Germination","Form","Flowers","Soil","Comments"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n  state = {\n    plant: {}\n  };\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    API.getBook(this.props.match.params.id)\n      .then(res => this.setState({ plant: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.plant.Type} by {this.state.plant.Name}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <ul>\n                <li>Type:{this.state.plant.Type}</li>\n                <li>Name:{this.state.plant.Name}</li>\n                <li>Image: <href>{this.state.plant.Image}</href></li>\n                <li>BotanicalName:{this.state.plant.BotanicalName}</li>\n                <li>Height: {this.state.plant.Height}</li>\n                <li>Spacing:{this.state.plant.Spacing}</li>\n                <li>Plant Spacing:{this.state.plant.PS}</li>\n                <li>Row Spacing: <href>{this.state.plant.RS}</href></li>\n                <li>Depth:{this.state.plant.Depth}</li>\n                <li>Spread: {this.state.plant.Spread}</li>\n                <li>Sun Light:{this.state.plant.Light}</li>\n                <li>Yield:{this.state.plant.Yeild}</li>\n                <li>Foliage: <href>{this.state.plant.Foliage}</href></li>\n                <li>Fruit:{this.state.plant.Fruit}</li>\n                <li>Maturity: {this.state.plant.Maturity}</li>\n                <li>Zone:{this.state.plant.Zone}</li>\n                <li>Germination:{this.state.plant.Germination}</li>\n                <li>Form: <href>{this.state.plant.Form}</href></li>\n                <li>Flowers:{this.state.plant.Flowers}</li>\n                <li>Soil: {this.state.plant.Soil}</li>\n\n\n\n\nZone: String,\nGermination: String,\nForm: String,\nFlowers: String,\nSoil: String,\nGrowth: String,\nSeeds: String,\nPruning: String,\nComments: String,\n\n\n\n\n\n\n\n\n                {this.state.plant.Comments}\n              </ul>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n\n/*\nType: String,\nName: String,\nImage: String,\nBotanicalName: String,\nHeight: String,\nSpacing: String,\nPS: Number,\nRS: Number,\nDepth: String,\nSpread: String,\nLight: String,\nYield: String,\nFoliage: String,\nFruit: String,\nMaturity: String,\nZone: String,\nGermination: String,\nForm: String,\nFlowers: String,\nSoil: String,\nGrowth: String,\nSeeds: String,\nPruning: String,\nComments: String,\n*/"]},"metadata":{},"sourceType":"module"}